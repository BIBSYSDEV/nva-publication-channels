openapi: 3.0.3
info:
  title: NVA Publication Channels
  description: >
    The NVA Publication Channels API.

      This API provides a facade that allows dereferencing of individual pubulication channels in [NSD DBH](https://dbh.nsd.uib.no/publiseringskanaler/Forside).

      The data is reformatted as JSON-LD with a schema defined in the [search ontology](https://bibsysdev.github.io/src/search-ontology.ttl) and the [publication channel ontology](https://bibsysdev.github.io/src/publication-channel-ontology.ttl).

      To understand the semantic layer, take a look at the @context URI returned by the API, the data is marked up according to this and may be interpreted directly to RDF using this.
  termsOfService: http://nva.unit.no/terms/
  contact:
    email: nva@unit.no
  license:
    name: MIT/NLOD 2.0
    url: https://link.to.license
  version: 1.0.0
externalDocs:
  description: Find out more about NVA
  url: https://nva.unit.no
servers:
  - url: https://api.nva.unit.no/channels
paths:
  /journal/{pid}:
    get:
      x-amazon-apigateway-integration:
        uri:
            Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${JournalFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
      - Journal
      summary: Find journal by ID
      description: Returns a single Journal
      operationId: GetJournalById
      parameters:
      - name: pid
        in: path
        description: ID of journal to return
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
        example: '495216'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journal'
              examples:
                objectExample:
                  $ref: '#/components/examples/JournalExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Journal'
              examples:
                objectExample:
                  $ref: '#/components/examples/JournalExample'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  /publisher/{pid}:
    get:
      x-amazon-apigateway-integration:
        uri:
            Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PublisherFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
      - Publisher
      summary: Find publisher by ID
      description: Returns a single Publisher
      operationId: getPublisherById
      parameters:
      - name: pid
        in: path
        description: ID of publisher to return
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
        example: '20595'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
              examples:
                objectExample:
                  $ref: '#/components/examples/PublisherExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Publisher'
              examples:
                objectExample:
                  $ref: '#/components/examples/PublisherExample'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  /search:
    post:
      x-amazon-apigateway-integration:
        uri:
            Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SearchChannelFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
      - Channel
      summary: SearchChannelFunction search format a publication channel channel
      description: Returns a list of publication channels matching criteria
      operationId: SearchChannelFunctionChannels
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/PublicationChannel'
        404:
          description: Channel not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  responses:
    400:
      description: Invalid ID supplied
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    404:
      description: Not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    500:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
  schemas:
    Journal:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          type: string
          pattern: '^https:\/\/example.org/journal/[0-9]+$'
          description: The URI of the object
        type:
          type: string
          pattern: 'Journal'
          description: The type of the returned object, always Journal
        name:
          $ref: '#/components/schemas/Name'
        identifier:
          $ref: '#/components/schemas/Identifier'
        eIssn:
          type: string
          pattern: '^[0-9]{4}-[0-9]{4}$'
          description: The ISSN of the online edition of the Journal
        issn:
          type: string
          pattern: '^[0-9]{4}-[0-9]{4}$'
          nullable: true
          description: The ISSN of the print edition of the Journal
        active:
          $ref: '#/components/schemas/Active'
        language:
          type: string
          pattern: '^http:\/\/lexvo.org\/id\/iso639-3\/[a-z]{3}$'
          description: The lexvo URI for the language of the Journal
        webpage:
          $ref: '#/components/schemas/Webpage'
        publisher:
          type: string
          pattern: '^http(s)?:\/\/example.org/publisher/[0-9]+$'
          description: The URI for the publisher of the Journal in NSD DBH
        npiDomain:
          type: string
          pattern: '^http(s)?:\/\/example.org/npi-domain/[0-9]+$'
          description: The URI of the NPI academic domain (e.g. computer science, biology) that the Journal covers.
        scientificValue:
          $ref: '#/components/schemas/ScientificValue'
    Publisher:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          type: string
          description: The URI of the object
        type:
          type: string
          pattern: '^Publisher$'
          description: The type of the returned object
        name:
          $ref: '#/components/schemas/Name'
        identifier:
          $ref: '#/components/schemas/Identifier'
        isbnPrefixes:
          type: array
          items:
            type: string
            description: The ISBN prefix ((EAN)-group-publisher) portions of ISBNs associatied with the Publisher
        webpage:
          $ref: '#/components/schemas/Webpage'
        active:
          $ref: '#/components/schemas/Active'
        scientificValue:
          $ref: '#/components/schemas/ScientificValue'
    PublicationChannel:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          type: string
          description: The URI of the object
        type:
          type: string
          description: The type of the returned object
        name:
          $ref: '#/components/schemas/Name'
        identifier:
          $ref: '#/components/schemas/Identifier'
        webpage:
          $ref: '#/components/schemas/Webpage'
        active:
          $ref: '#/components/schemas/Active'
        scientificValue:
          $ref: '#/components/schemas/ScientificValue'
    Problem:
      type: object
      properties:
        type:
          type: string
          description: A URI describing the error and mitigations, in generic cases, this is about:blank
        status:
          type: integer
          format: int32
          description: The HTTP status code associated with the problem
        title:
          type: string
          description: Human-readable description of the error status
        detail:
          type: string
          description: A more detailed error message describing the error and potential mitigations
        instance:
          type: string
          description: The requested path associated with the error
    Context:
      type: string
      pattern: 'https:\/\/.*$'
      description: The JSON-LD context object for the data, which describes the object in the data and allows machine processing of the data at a semantic level
    Name:
      type: string
      description: The name of the publication channel
    Identifier:
      type: string
      pattern: '^[0-9]+$'
      description: The NSD DBH persistent identifier of the publication channel
    Webpage:
      type: string
      pattern: '^http(s)?:\/\/.*$'
      nullable: true
      description: The URI for the homepage of the publication channel
    Active:
      type: boolean
      description: The activity status of the Publisher; true if it is currently publishing content, false if it has ceased publishing
    ScientificValue:
      type: string
      enum: ['LEVEL_0', 'LEVEL_1', 'LEVEL_2', null]
      nullable: true
      description: The NPI level of the journal, either null, LEVEL_0, LEVEL_1, LEVEL_2
  examples:
    JournalExample:
      value:
        '@context': 'https://example.org/context.json'
        id: 'https://example.org/journal/123123123'
        type: 'Journal'
        name: The journal of eternal fury
        identifier: '123123123'
        eIssn: '1234-1234'
        issn: '4321-4321'
        active: true
        language: 'http://lexvo.org/id/iso639-3/eng'
        webpage: 'https://www.example.org/journalofefury'
        publisher: 'https://example.org/publisher/4321432'
        npiDomain: 'https://example.org/npi-fagfelt/3001'
        scientificValue: 'LEVEL_1'
      summary: A sample journal
    PublisherExample:
      value:
        '@context': 'https://example.org/context.json'
        id: 'https://example.org/publisher/123123123'
        type: 'Publisher'
        name: Quendos publishing BBCR LTD
        identifier: '123123123'
        isbnPrefixes:
          - 979-3-001-1234
        webpage: 'https://www.example.org/journalofefury'
        active: true
        scientificValue: 'LEVEL_1'
      summary: A sample publisher

